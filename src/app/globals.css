@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Glass red accents */
:root {
  --glass: rgba(255,255,255,0.03);
  --accent-red: #ff4d4f;
  --accent-red-600: rgba(255,77,79,0.9);
}

.input {
  background: transparent;
  border: 1px solid rgba(255,255,255,0.06);
  border-radius: 0.5rem;
  padding: 0.5rem 0.75rem;
  color: var(--foreground);
}

/* Animations */
@keyframes overlayFade {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes modalPop {
  0% { transform: translateY(10px) scale(0.98); opacity: 0; }
  60% { transform: translateY(-6px) scale(1.02); opacity: 1; }
  100% { transform: translateY(0) scale(1); opacity: 1; }
}

@keyframes imageZoom {
  from { transform: scale(0.98); }
  to { transform: scale(1); }
}

.overlay-animate { animation: overlayFade 180ms ease-out; }
.modal-pop { animation: modalPop 260ms cubic-bezier(.16,.84,.3,1); }
.img-zoom { animation: imageZoom 260ms ease-out; }

/* Subtle focus ring for modal close */
.btn-focus:focus { outline: 2px solid rgba(255,77,79,0.25); outline-offset: 2px; }

/* Skeleton shimmer */
@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}
.skeleton {
  background: linear-gradient(90deg, rgba(255,255,255,0.03) 25%, rgba(255,255,255,0.06) 50%, rgba(255,255,255,0.03) 75%);
  background-size: 400% 100%;
  animation: shimmer 1.4s linear infinite;
}

/* Spinner */
@keyframes spin { to { transform: rotate(360deg); } }
.spinner {
  width: 2rem; height: 2rem; border-radius: 9999px; border: 4px solid rgba(255,255,255,0.08); border-top-color: var(--accent-red); animation: spin 800ms linear infinite;
}
